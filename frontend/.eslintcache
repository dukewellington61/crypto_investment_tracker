[{"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/actions/currencies.js":"1","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/portfolio/TotalChart.js":"2","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/actions/auth.js":"3","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/actions/positions.js":"4","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/navbar/Navbar.js":"5","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/layout/Alert.js":"6","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/portfolio/CurrencyTotalChart.js":"7","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/layout/Landing.js":"8","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/utils/setAuthToken.js":"9","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/navbar/AccountIcon.js":"10","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/portfolio/PositionChartDiagram.js":"11","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/navbar/Menu.js":"12","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/index.js":"13","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/actions/user.js":"14","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/auth/Login.js":"15","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/portfolio/PositionChart.js":"16","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/portfolio/CurrencyTotalChartDiagram.js":"17","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/portfolio/Overview.js":"18","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/input/PositionInput.js":"19","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/auth/Register.js":"20","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/portfolio/TotalChartDiagramm.js":"21","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/portfolio/Position.js":"22","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/App.js":"23","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/aux/auxCryptoData.js":"24","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/aux/auxUserData.js":"25"},{"size":4387,"mtime":1608585888856,"results":"26","hashOfConfig":"27"},{"size":1608,"mtime":1608575685968,"results":"28","hashOfConfig":"27"},{"size":957,"mtime":1608496846132,"results":"29","hashOfConfig":"27"},{"size":305,"mtime":1606696555067,"results":"30","hashOfConfig":"27"},{"size":760,"mtime":1608491792214,"results":"31","hashOfConfig":"27"},{"size":304,"mtime":1608508012514,"results":"32","hashOfConfig":"27"},{"size":1954,"mtime":1608481893595,"results":"33","hashOfConfig":"27"},{"size":2297,"mtime":1608596870194,"results":"34","hashOfConfig":"27"},{"size":453,"mtime":1606258980875,"results":"35","hashOfConfig":"27"},{"size":307,"mtime":1608492814650,"results":"36","hashOfConfig":"27"},{"size":1026,"mtime":1607120852571,"results":"37","hashOfConfig":"27"},{"size":742,"mtime":1608493436023,"results":"38","hashOfConfig":"27"},{"size":197,"mtime":1606250467549,"results":"39","hashOfConfig":"27"},{"size":433,"mtime":1608481912219,"results":"40","hashOfConfig":"27"},{"size":1764,"mtime":1608489340734,"results":"41","hashOfConfig":"27"},{"size":947,"mtime":1608067910038,"results":"42","hashOfConfig":"27"},{"size":1581,"mtime":1608157745175,"results":"43","hashOfConfig":"27"},{"size":4357,"mtime":1608512908022,"results":"44","hashOfConfig":"27"},{"size":2876,"mtime":1606858612027,"results":"45","hashOfConfig":"27"},{"size":2228,"mtime":1606351800704,"results":"46","hashOfConfig":"27"},{"size":3358,"mtime":1608510481333,"results":"47","hashOfConfig":"27"},{"size":3296,"mtime":1608481890531,"results":"48","hashOfConfig":"27"},{"size":4520,"mtime":1608500566642,"results":"49","hashOfConfig":"27"},{"size":4723,"mtime":1608511571392,"results":"50","hashOfConfig":"27"},{"size":641,"mtime":1608496847092,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"1h8ao3e",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"55"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"91"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"55"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"91"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"55"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"55"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/actions/currencies.js",["120","121"],"import axios from \"axios\";\n\nexport const getLatestCryptoPrice = async (currencyNamesArr) => {\n  console.log(\"getLatestCryptoPrice() @currencies.js\");\n  const currencyNamesString = await getNameString(currencyNamesArr);\n\n  const urlString = `https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&ids=${currencyNamesString}b&order=market_cap_desc&per_page=100&page=1&sparkline=false`;\n\n  try {\n    const res = await axios.get(urlString);\n\n    return res;\n  } catch (err) {\n    return err;\n  }\n};\n\nconst getNameString = async (currencyNamesArr) => {\n  let nameString = \"\";\n\n  currencyNamesArr.forEach((el) => (nameString += `${el}%2C%20`));\n\n  return nameString;\n};\n\nexport const getMarketCharts = async (currency, date_of_purchase) => {\n  console.log(\"getMarketCharts() @currencies.js\");\n  const from = new Date(date_of_purchase).getTime() / 1000;\n  const to = new Date().getTime() / 1000;\n\n  const urlString = `https://api.coingecko.com/api/v3/coins/${currency}/market_chart/range?vs_currency=eur&from=${from}&to=${to}`;\n\n  try {\n    const res = await axios.get(urlString);\n\n    return res;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const getMarketChartsCrypto = async (\n  user,\n  currency,\n  current_price,\n  duration\n) => {\n  console.log(\"getMarketChartsCrypto() @currencies.js\");\n  let from = null;\n  let date = null;\n\n  switch (duration) {\n    case \"day\":\n      date = new Date();\n      date.setDate(date.getDate() - 1);\n      from = date / 1000;\n      break;\n    case \"week\":\n      date = new Date();\n      date.setDate(date.getDate() - 7);\n      from = date / 1000;\n      break;\n    case \"month\":\n      date = new Date();\n      date.setDate(date.getDate() - 30);\n      from = date / 1000;\n      break;\n    case \"all_currency\":\n      from = new Date(await getFromDate(user, currency)).getTime() / 1000;\n      break;\n    case \"all_total\":\n      const res = user.positions.sort(\n        (a, b) =>\n          Date.parse(a.date_of_purchase) - Date.parse(b.date_of_purchase)\n      );\n      from = new Date(res[0].date_of_purchase).getTime() / 1000;\n      break;\n  }\n\n  const to = new Date().getTime() / 1000;\n\n  const urlString = `https://api.coingecko.com/api/v3/coins/${currency}/market_chart/range?vs_currency=eur&from=${from}&to=${to}`;\n\n  const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\n  try {\n    const dataSequence = await axios.get(proxyurl + urlString);\n\n    // replaces the last price in the array with the most recent price so the last data point in @components/layout/CurrencyTotalChart.js and TotalChart.js\n    // are always up to date\n    dataSequence.data.prices[\n      dataSequence.data.prices.length - 1\n    ][1] = current_price;\n\n    const dataSequenceTransformed = addDateToArr(dataSequence.data.prices);\n\n    let returnValue = \"\";\n\n    switch (duration) {\n      case \"day\":\n        returnValue = dataSequenceTransformed.slice(0, 260);\n        break;\n      case \"week\":\n        returnValue = dataSequenceTransformed.slice(0, 165);\n        break;\n      case \"month\":\n        returnValue = dataSequenceTransformed.slice(0, 720);\n        break;\n      case \"all_currency\":\n        returnValue = dataSequenceTransformed;\n        break;\n      case \"all_total\":\n        returnValue = dataSequenceTransformed;\n        break;\n    }\n\n    return returnValue;\n  } catch (error) {\n    return error;\n  }\n};\n\nconst getFromDate = (user, currency) => {\n  let dates = [];\n\n  currency\n    ? user.positions.forEach((position) => {\n        if (position.crypto_currency === currency)\n          dates.push(position.date_of_purchase);\n      })\n    : user.positions.forEach((position) =>\n        dates.push(position.date_of_purchase)\n      );\n\n  let sort = dates.sort(function (a, b) {\n    return Date.parse(a) > Date.parse(b);\n  });\n\n  // conditionally return because sequence in sort array is beeing turned around on reload (for some reason) sometimes returning the latest, rather than the earliest date\n  return sort[0] > sort[sort.length - 1] ? sort[sort.length - 1] : sort[0];\n};\n\nconst addDateToArr = (arr) =>\n  arr.map((el, index) => {\n    const date = new Date(el[0]);\n    const day =\n      date.getDate() < 10 ? \"0\" + date.getDate() : \"\" + date.getDate();\n    const month = date.toLocaleString(\"default\", { month: \"long\" });\n    const year = date.getFullYear();\n    const dateString = `${day}. ${month} ${year}`;\n    return [...arr[index], dateString];\n  });\n",["122","123"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/portfolio/TotalChart.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/actions/auth.js",[],["124","125"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/actions/positions.js",[],["126","127"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/navbar/Navbar.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/layout/Alert.js",[],["128","129"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/portfolio/CurrencyTotalChart.js",["130"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { getMarketChartsCrypto } from \"../../actions/currencies\";\nimport { cumulativeValueInvestment } from \"../../aux/auxCryptoData\";\nimport CurrencyTotalChartDiagram from \"./CurrencyTotalChartDiagram\";\nimport { useLocation } from \"react-router-dom\";\n\nconst CurrencyTotalChart = ({ user, cryptoCurrencies, logedin }) => {\n  const currency = sessionStorage.getItem(\"crypto_currency\");\n\n  const data = useLocation();\n\n  const [marketChart, setMarketChart] = useState([]);\n\n  const [currencyTotal, setCurrencyTotal] = useState({});\n\n  useEffect(() => {\n    const updateState = async () => {\n      if (logedin && cryptoCurrencies.data) {\n        // getCryptoCurrentDataObj() retrieves currency object from props.cryptoCurrencies\n        // the price attribute in this object is passed as parameter to getMarketChartsCrypto()\n        const getCryptoCurrentDataObj = (currency) => {\n          let currencyObj = {};\n          cryptoCurrencies.data.forEach((obj) => {\n            if (obj.id === currency) currencyObj = obj;\n          });\n          return currencyObj;\n        };\n\n        const fromdate = \"all_currency\";\n\n        const chartData = await getMarketChartsCrypto(\n          user,\n          currency,\n          getCryptoCurrentDataObj(currency).current_price,\n          fromdate\n        );\n        setMarketChart(chartData);\n\n        setCurrencyTotal(\n          cumulativeValueInvestment(user.positions, chartData, currency)\n        );\n      }\n    };\n\n    updateState();\n  }, [user, cryptoCurrencies, logedin]);\n\n  return marketChart.length === 0 ? (\n    <div>Loading ...</div>\n  ) : (\n    <div>\n      <Fragment>\n        <CurrencyTotalChartDiagram\n          currencyTotal={currencyTotal}\n          currency={currency}\n          fiat={user.positions[0].fiat_currency}\n          origin={data.state.origin}\n        />\n      </Fragment>\n    </div>\n  );\n};\nexport default CurrencyTotalChart;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/layout/Landing.js",["131","132"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { getMarketChartsCrypto } from \"../../actions/currencies\";\nimport { getCurrenciesNames } from \"../../aux/auxCryptoData\";\nimport Overview from \"../portfolio/Overview\";\nimport TotalChart from \"../portfolio/TotalChart\";\n\nfunction Landing({ user, cryptoCurrencies, logedin, triggerAlert }) {\n  const [renderOverview, setRenderOverview] = useState(true);\n  const [renderTotalChart, setRenderTotalChart] = useState(false);\n\n  const toggleView = () => {\n    if (renderOverview) {\n      setRenderOverview(false);\n      setRenderTotalChart(true);\n      return;\n    } else {\n      setRenderOverview(true);\n      setRenderTotalChart(false);\n    }\n  };\n\n  const [origin, setOrigin] = useState();\n\n  const updateOriginState = (val) => setOrigin(val);\n\n  const [marketCharts, setMarketCharts] = useState({});\n  const [loaded, setLoaded] = useState(false);\n  const [duration, setDuration] = useState(\"all_total\");\n\n  useEffect(() => {\n    let currenciesObject = {};\n    const currencyNamesArr = getCurrenciesNames(user);\n\n    currencyNamesArr.forEach(async (currencyName) => {\n      const res = await getMarketChartsCrypto(\n        user,\n        currencyName,\n        marketCharts.current_price,\n        duration\n      );\n      if (res instanceof Error) {\n        // triggerAlert(\"an error has occured while loading data\");\n        triggerAlert(res.response.data);\n      } else currenciesObject[currencyName] = res;\n    });\n\n    setMarketCharts(currenciesObject);\n    setLoaded(true);\n  }, [user, cryptoCurrencies, logedin]);\n\n  return (\n    <Fragment>\n      {renderOverview && (\n        <Overview\n          user={user}\n          cryptoCurrencies={cryptoCurrencies}\n          logedin={logedin}\n          toggleView={toggleView}\n          renderOverview={renderOverview}\n          updateOriginState={updateOriginState}\n        />\n      )}\n      {renderTotalChart && (\n        <TotalChart\n          user={user}\n          marketCharts={marketCharts}\n          cryptoCurrencies={cryptoCurrencies}\n          logedin={logedin}\n          triggerAlert={triggerAlert}\n          toggleView={toggleView}\n          origin={origin}\n          loaded={loaded}\n          duration={duration}\n        />\n      )}\n    </Fragment>\n  );\n}\n\nexport default Landing;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/utils/setAuthToken.js",[],["133","134"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/navbar/AccountIcon.js",["135"],"import React, { Fragment } from \"react\";\nimport Menu from \"./Menu\";\n\nconst AccountIcon = ({ logout, logedin }) => {\n  return (\n    <div id=\"account_nav_item\">\n      account\n      <div id=\"menu\">\n        <Menu logout={logout} logedin={logedin} />\n      </div>\n    </div>\n  );\n};\n\nexport default AccountIcon;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/portfolio/PositionChartDiagram.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/navbar/Menu.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/index.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/actions/user.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/auth/Login.js",[],["136","137"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/portfolio/PositionChart.js",["138"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { getMarketCharts } from \"../../actions/currencies\";\nimport PositionChartDiagram from \"./PositionChartDiagram\";\n\nconst PositionChart = () => {\n  let data = useLocation();\n\n  const [marketChart, setMarketChart] = useState({});\n\n  useEffect(() => {\n    const updateStates = async () => {\n      const chartData = await getMarketCharts(\n        data.state.currency,\n        data.state.date_of_purchase\n      );\n      setMarketChart(chartData);\n    };\n\n    updateStates();\n  }, []);\n\n  function isEmpty(obj) {\n    return Object.keys(obj).length === 0;\n  }\n\n  return isEmpty(marketChart) ? (\n    <div>Loading ...</div>\n  ) : (\n    <div>\n      <Fragment>\n        <PositionChartDiagram\n          marketChart={marketChart}\n          amount={data.state.amount}\n        />\n      </Fragment>\n    </div>\n  );\n};\n\nexport default PositionChart;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/portfolio/CurrencyTotalChartDiagram.js",["139","140"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst CurrencyTotalChartDiagram = ({\n  currencyTotal,\n  currency,\n  fiat,\n  origin,\n}) => {\n  const [originateFrom, setOriginateFrom] = useState([]);\n  const [labelStr, setLabelStr] = useState(\"\");\n\n  useEffect(() => {\n    switch (origin) {\n      case \"initialInvestment\":\n        setOriginateFrom(currencyTotal.initialValueArray);\n        setLabelStr(`Price in ${fiat}`);\n        break;\n      case \"currentValue\":\n        setOriginateFrom(currencyTotal.currentValueArray);\n        setLabelStr(`Price in ${fiat}`);\n        break;\n      case \"balance\":\n        setOriginateFrom(currencyTotal.balanceArray);\n        setLabelStr(`Price in ${fiat}`);\n        break;\n      case \"roi\":\n        setOriginateFrom(currencyTotal.roiArray);\n        setLabelStr(`ROI in %`);\n        break;\n    }\n  }, [currencyTotal, currency, fiat, origin]);\n\n  return (\n    <div>\n      <Line\n        data={{\n          labels: currencyTotal.timeStampArray,\n          datasets: [\n            {\n              label: currency,\n              data: originateFrom,\n            },\n          ],\n        }}\n        // width={500}\n        height={500}\n        options={{\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [\n              {\n                scaleLabel: {\n                  display: true,\n                  labelString: labelStr,\n                },\n              },\n            ],\n          },\n        }}\n      />\n    </div>\n  );\n};\n\nexport default CurrencyTotalChartDiagram;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/portfolio/Overview.js",["141","142","143"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getNamesAndValues } from \"../../aux/auxCryptoData\";\nimport { getAmount } from \"../../aux/auxCryptoData\";\nimport { getCurrentPrice } from \"../../aux/auxCryptoData\";\nimport { getCurrentValue } from \"../../aux/auxCryptoData\";\n\nconst Overview = ({\n  user,\n  cryptoCurrencies,\n  logedin,\n  toggleView,\n  renderOverview,\n  updateOriginState,\n}) => {\n  const [currencyNamesAndValues, setCurrencyNamesAndValues] = useState([]);\n\n  const [currentValueTotal, setCurrentValueTotal] = useState(0);\n\n  const [totalPurchase, setTotalPurchase] = useState(0);\n\n  useEffect(() => {\n    const namesAndValuesArr = getNamesAndValues(user, cryptoCurrencies);\n\n    setCurrencyNamesAndValues(namesAndValuesArr);\n\n    const totalsArray = namesAndValuesArr.map((el) =>\n      getCurrentValue(user, cryptoCurrencies, el[0])\n    );\n\n    setCurrentValueTotal(totalsArray.reduce((a, b) => a + b, 0));\n\n    setTotalPurchase(getTotalPurchase());\n  }, [user, cryptoCurrencies, logedin, renderOverview]);\n\n  const getTotal = (currency) => {\n    let sum = 0;\n    user.positions.map((position) => {\n      if (position.crypto_currency === currency) {\n        sum += position.price;\n      }\n    });\n    return sum;\n  };\n\n  const getTotalPurchase = () => {\n    let sum = 0;\n    if (logedin) user.positions.forEach((position) => (sum += position.price));\n    return sum;\n  };\n\n  const getBalance = (currency) =>\n    getCurrentValue(user, cryptoCurrencies, currency) - getTotal(currency);\n\n  const setCurrency = (currency) => {\n    if (sessionStorage.getItem(\"crypto_currency\")) {\n      sessionStorage.removeItem(\"crypto_currency\");\n      sessionStorage.setItem(\"crypto_currency\", currency);\n    } else {\n      sessionStorage.setItem(\"crypto_currency\", currency);\n    }\n  };\n\n  const handleClick = (val) => {\n    toggleView();\n    updateOriginState(val);\n  };\n\n  return (\n    <div>\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Crypto</th>\n            <th scope=\"col\">Amount</th>\n            <th scope=\"col\">Purchased for</th>\n            <th scope=\"col\">Current Value</th>\n            <th scope=\"col\">Balance</th>\n            <th scope=\"col\">ROI</th>\n          </tr>\n        </thead>\n        <tbody>\n          {logedin &&\n            currencyNamesAndValues.map((el) => (\n              <tr>\n                <Link\n                  to={{\n                    pathname: \"/position\",\n                    current_price: getCurrentPrice(cryptoCurrencies, el[0]),\n                    state: {\n                      currency: el[0],\n                      user: user,\n                    },\n                  }}\n                >\n                  <th scope=\"row\">{el[0]}</th>\n                </Link>\n                <td onClick={handleClick}>\n                  {getAmount(user, el[0]).toFixed(3)}\n                </td>\n                <td onClick={handleClick}>\n                  {getTotal(el[0]).toFixed(2)}&euro;\n                </td>\n                <td onClick={handleClick}>\n                  {getCurrentValue(user, cryptoCurrencies, el[0]).toFixed(2)}\n                  &euro;\n                </td>\n                <td onClick={handleClick}>\n                  {getBalance(el[0]).toFixed(2)}&euro;\n                </td>\n                <td onClick={handleClick}>\n                  {(\n                    (getCurrentValue(user, cryptoCurrencies, el[0]) * 100) /\n                      getTotal(el[0]) -\n                    100\n                  ).toFixed(0)}\n                  %\n                </td>\n              </tr>\n            ))}\n        </tbody>\n        <tr>\n          <th scope=\"row\"></th>\n          <td></td>\n          <td onClick={() => handleClick(\"total_initial_value\")}>\n            {totalPurchase.toFixed(2)}&euro;\n          </td>\n          <td onClick={() => handleClick(\"total_current_value\")}>\n            {currentValueTotal.toFixed(2)}&euro;\n          </td>\n          <td onClick={() => handleClick(\"total_balance\")}>\n            {(currentValueTotal - totalPurchase).toFixed(2)}&euro;\n          </td>\n          <td onClick={() => handleClick(\"total_roi\")}>\n            {((currentValueTotal * 100) / totalPurchase - 100).toFixed(0)}%\n          </td>\n        </tr>\n      </table>\n    </div>\n  );\n};\n\nexport default Overview;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/input/PositionInput.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/auth/Register.js",["144","145"],"import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nconst Register = ({ logedin, signup }) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n\n  const { firstname, lastname, email, password, password2 } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    signup(email, password, password2);\n  };\n\n  // if some nasty user enters .../login in url --> redirect to landing page\n  // otherwhise the register form could be displayed to a logged in user\n  if (logedin) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"form_container\">\n      <h3 className=\"large text-primary\">Sign Up</h3>\n      <p className=\"lead\">\n        <i className=\"fa fa-user auth_fa-user\"></i> Create your account\n      </p>\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control input_field\"\n            type=\"email\"\n            placeholder=\"Email Address\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control input_field\"\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control input_field\"\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            name=\"password2\"\n            value={password2}\n            onChange={(e) => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n      </form>\n      <p className=\"my-1\">\n        Already have an account? <Link to=\"/login\">Sign In</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default Register;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/portfolio/TotalChartDiagramm.js",["146","147","148"],"import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { cumulativeValueInvestment } from \"../../aux/auxCryptoData\";\n\nfunction TotalChartDiagramm({\n  positions,\n  marketCharts,\n  fiat,\n  origin,\n  duration,\n}) {\n  const [nameArray, setNameArray] = useState(\"\");\n\n  const [labelStr, setLabelStr] = useState(\"\");\n\n  const [resultArray, setResultArray] = useState([]);\n\n  const [timeStampArray, setTimeStampArray] = useState([]);\n\n  useEffect(() => {\n    switch (origin) {\n      case \"total_initial_value\":\n        setNameArray(\"initialValueArray\");\n        setLabelStr(`Price in ${fiat}`);\n        break;\n      case \"total_current_value\":\n        setNameArray(\"currentValueArray\");\n        setLabelStr(`Price in ${fiat}`);\n        break;\n      case \"total_balance\":\n        setNameArray(\"balanceArray\");\n        setLabelStr(`Price in ${fiat}`);\n        break;\n      case \"total_roi\":\n        setNameArray(\"roiArray\");\n        setLabelStr(`ROI in %`);\n        break;\n    }\n  }, []);\n\n  useEffect(() => {\n    const currenciesTotalObjectsArray = [];\n\n    const timeStamps = [];\n\n    const currencyArr = Object.keys(marketCharts);\n\n    const totalValueInvestment = (obj) => {\n      currenciesTotalObjectsArray.push(obj);\n    };\n\n    currencyArr.forEach((currency) =>\n      totalValueInvestment(\n        cumulativeValueInvestment(positions, marketCharts[currency], currency)\n      )\n    );\n\n    currenciesTotalObjectsArray.forEach((obj) => {\n      obj.timeStampArray.forEach((el, index) => (timeStamps[index] = el));\n    });\n\n    // the following code sums up initial_value, current_value, balance of every individual currency so that the totals of these attributes can be displayed in a chart\n    // it also calculates the development of roi over time\n    const resArray = new Array(timeStamps.length).fill(0);\n\n    if (nameArray) {\n      const initValResArray = new Array(timeStamps.length).fill(0);\n      const currValResArray = new Array(timeStamps.length).fill(0);\n      currenciesTotalObjectsArray.forEach((obj) => {\n        if (nameArray === \"roiArray\") {\n          obj.initialValueArray.forEach(\n            (el, index) => (initValResArray[index] += el)\n          );\n          obj.currentValueArray.forEach(\n            (el, index) => (currValResArray[index] += el)\n          );\n          obj.roiArray.forEach(\n            (el, index) =>\n              (resArray[index] =\n                (currValResArray[index] * 100) / initValResArray[index] - 100)\n          );\n        } else {\n          obj[nameArray].forEach((el, index) => (resArray[index] += el));\n        }\n      });\n    }\n\n    setResultArray(resArray);\n\n    setTimeStampArray(timeStamps);\n  }, [nameArray, marketCharts, duration]);\n\n  return (\n    <div>\n      <Line\n        data={{\n          labels: timeStampArray,\n          datasets: [\n            {\n              label: labelStr,\n              data: resultArray,\n            },\n          ],\n        }}\n        // width={500}\n        height={500}\n        options={{\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [\n              {\n                scaleLabel: {\n                  display: true,\n                  labelString: labelStr,\n                },\n              },\n            ],\n          },\n        }}\n      />\n    </div>\n  );\n}\n\nexport default TotalChartDiagramm;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/components/portfolio/Position.js",["149","150"],"import React, { useEffect, Fragment } from \"react\";\nimport { getCurrencyPositions } from \"../../aux/auxCryptoData\";\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nfunction Position() {\n  const data = useLocation();\n\n  useEffect(() => {\n    if (data.current_price != undefined) {\n      sessionStorage.setItem(\"crypto_inv_current_price\", data.current_price);\n    }\n  }, []);\n\n  const transformDate = (val) => {\n    const date = new Date(val);\n    const day =\n      date.getDate() < 10 ? \"0\" + date.getDate() : \"\" + date.getDate();\n    const month = date.toLocaleString(\"default\", { month: \"long\" });\n    const year = date.getFullYear();\n    const dateString = `${day}. ${month} ${year}`;\n    return dateString;\n  };\n\n  return (\n    <Fragment>\n      <div>\n        current price per coin:\n        {data.current_price ||\n          sessionStorage.getItem(\"crypto_inv_current_price\")}{\" \"}\n        {data.state.user.positions[0].fiat_currency}\n      </div>\n      <div className=\"row\">\n        {getCurrencyPositions(data.state.user, data.state.currency).map(\n          (position) => {\n            return (\n              <Link\n                id=\"position\"\n                to={{\n                  pathname: \"/position_chart\",\n                  state: {\n                    currency: position.crypto_currency,\n                    date_of_purchase: position.date_of_purchase,\n                    amount: position.amount,\n                  },\n                }}\n              >\n                <div className=\"col\">amount: {position.amount}</div>\n                <div className=\"col\">\n                  price per coin at time of purchase:\n                  {(position.price / position.amount).toFixed(2)}\n                </div>\n                <div className=\"col\">\n                  purchase date:\n                  {/* {position.date_of_purchase.split(\"T\").slice(0, 1).join(\"\")} */}\n                  {transformDate(position.date_of_purchase)}\n                </div>\n                <div className=\"col\">\n                  initial value:\n                  {position.price}\n                  {position.fiat_currency}\n                </div>\n                <div className=\"col\">\n                  current value:\n                  {data.current_price === undefined\n                    ? (\n                        sessionStorage.getItem(\"crypto_inv_current_price\") *\n                        position.amount\n                      ).toFixed(2)\n                    : (data.current_price * position.amount).toFixed(2)}\n                  {position.fiat_currency}\n                </div>\n\n                <div className=\"col\">\n                  balance:\n                  {data.current_price === undefined\n                    ? (\n                        sessionStorage.getItem(\"crypto_inv_current_price\") *\n                          position.amount -\n                        position.price\n                      ).toFixed(2)\n                    : (\n                        data.current_price * position.amount -\n                        position.price\n                      ).toFixed(2)}\n                  {position.fiat_currency}\n                </div>\n              </Link>\n            );\n          }\n        )}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Position;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/App.js",["151","152"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/aux/auxCryptoData.js",["153","154","155"],"export const getCurrenciesNames = (user) => {\n  let currencyArr = [];\n  if (user.positions) {\n    user.positions.map((position) =>\n      currencyArr.push(position.crypto_currency)\n    );\n  }\n\n  // techsith's recommended way to remove duplicates from array (https://www.youtube.com/watch?v=dvPybpgk5Y4)\n\n  return [...new Set(currencyArr)];\n};\n\nexport const getNamesAndValues = (user, cryptoCurrencies) => {\n  let namesAndValuesObj = {};\n\n  getCurrenciesNames(user).forEach((currencyName) => {\n    namesAndValuesObj[currencyName] = getCurrentValue(\n      user,\n      cryptoCurrencies,\n      currencyName\n    );\n  });\n\n  let res = Object.entries(namesAndValuesObj).sort(function (a, b) {\n    return b[1] - a[1];\n  });\n\n  return res;\n};\n\nexport const getCurrentValue = (user, cryptoCurrencies, currencyName) => {\n  const currentPrice = getCurrentPrice(cryptoCurrencies, currencyName);\n  const amount = getAmount(user, currencyName);\n  const getCurrentValue = currentPrice * amount;\n  // console.log(getCurrentValue);\n  return getCurrentValue;\n};\n\nexport const getCurrentPrice = (cryptoCurrencies, currencyName) => {\n  if (cryptoCurrencies.data && typeof currencyName === \"string\")\n    return cryptoCurrencies.data.find((el) => el.id === currencyName)\n      .current_price;\n};\n\nexport const getCurrencyPositions = (user, currencyName) => {\n  if (user.positions) {\n    return user.positions.filter(\n      (position) => position.crypto_currency === currencyName\n    );\n  }\n};\n\nexport const getAmount = (user, currencyName) => {\n  let sum = 0;\n  if (user.positions) {\n    user.positions.map((position) => {\n      if (position.crypto_currency === currencyName) {\n        sum += parseFloat(position.amount);\n      }\n    });\n  }\n\n  return sum;\n};\n\nconst getAmountAndDate = (positions, currencyName) => {\n  // extracts amount of coins, date of purchase and price\n  let AmountAndDateArr = [];\n\n  positions.forEach((el) => {\n    let arrEl = [];\n\n    if (el.crypto_currency === currencyName) {\n      arrEl[0] = Date.parse(el.date_of_purchase);\n      arrEl[1] = parseFloat(el.amount);\n      arrEl[2] = el.price;\n      AmountAndDateArr.push(arrEl);\n    }\n  });\n\n  // sorts AmountAndDateArr by purchase date beginning with the oldest\n  let sort = AmountAndDateArr.sort(function (a, b) {\n    return a[0] - b[0];\n  });\n\n  // adds amount of coins in array so that each amount is the sum of itself + the previous amount\n  for (const element in sort) {\n    element > 0\n      ? (sort[element][1] = sort[element][1] + sort[element - 1][1])\n      : (sort[element][1] = sort[element][1]);\n  }\n\n  // adds price of individual purchases so that each price in array is the sum of itself + the previous amount\n  for (const element in sort) {\n    element > 0\n      ? (sort[element][2] = sort[element][2] + sort[element - 1][2])\n      : (sort[element][2] = sort[element][2]);\n  }\n  return sort;\n};\n\n// returns object which has various arrays (initialValueArray, currentValueArray etc..)\n// is beeing called from @components/portfolio/TotalChartDiagramm.js for individual currency charts and CurrencyTotalChart.js\n// for charts which have combined values of all the currencies a user has\nexport const cumulativeValueInvestment = (positions, marketChart, currency) => {\n  let resultObject = {};\n  let initialValueArr = [];\n  let currentValueArr = [];\n  let balanceArr = [];\n  let roiArr = [];\n  let timeStampArr = [];\n\n  getAmountAndDate(positions, currency).forEach((array1) => {\n    marketChart.forEach((array2, index) => {\n      if (array1[0] <= array2[0]) {\n        currentValueArr[index] = array2[1] * array1[1];\n        timeStampArr[index] = getTimeStamps(marketChart, index, array2);\n        initialValueArr[index] = array1[2];\n        balanceArr[index] = currentValueArr[index] - initialValueArr[index];\n        roiArr[index] =\n          (currentValueArr[index] * 100) / initialValueArr[index] - 100;\n      }\n    });\n  });\n\n  resultObject.initialValueArray = initialValueArr;\n  resultObject.currentValueArray = currentValueArr;\n  resultObject.balanceArray = balanceArr;\n  resultObject.roiArray = roiArr;\n  resultObject.timeStampArray = timeStampArr;\n\n  return resultObject;\n};\n\n// returns duration in days -> from date of first purchase currency until now\n// duration is beeing used in conditional to make sure that x-axis doesn't have too many timestamps (granularity of data returned by API)\nconst checkDuration = (marketChart) =>\n  (marketChart[marketChart.length - 1][0] - marketChart[0][0]) /\n  1000 /\n  (24 * 60 * 60);\n\nconst getTimeStamps = (marketChart, index, array2) => {\n  if (\n    index === 0 || checkDuration(marketChart) < 90\n      ? index % 10 === 0\n      : index % 5 === 0\n  ) {\n    return array2[2];\n  } else {\n    return \" \";\n  }\n};\n",["156","157"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_investment_tracker/frontend/src/aux/auxUserData.js",[],{"ruleId":"158","severity":1,"message":"159","line":52,"column":3,"nodeType":"160","messageId":"161","endLine":78,"endColumn":4},{"ruleId":"158","severity":1,"message":"159","line":99,"column":5,"nodeType":"160","messageId":"161","endLine":115,"endColumn":6},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"162","replacedBy":"166"},{"ruleId":"164","replacedBy":"167"},{"ruleId":"162","replacedBy":"168"},{"ruleId":"164","replacedBy":"169"},{"ruleId":"162","replacedBy":"170"},{"ruleId":"164","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":46,"column":6,"nodeType":"174","endLine":46,"endColumn":39,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":28,"column":20,"nodeType":"178","messageId":"179","endLine":28,"endColumn":31},{"ruleId":"172","severity":1,"message":"180","line":49,"column":6,"nodeType":"174","endLine":49,"endColumn":39,"suggestions":"181"},{"ruleId":"162","replacedBy":"182"},{"ruleId":"164","replacedBy":"183"},{"ruleId":"176","severity":1,"message":"184","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":25},{"ruleId":"162","replacedBy":"185"},{"ruleId":"164","replacedBy":"186"},{"ruleId":"172","severity":1,"message":"187","line":21,"column":6,"nodeType":"174","endLine":21,"endColumn":8,"suggestions":"188"},{"ruleId":"176","severity":1,"message":"184","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":25},{"ruleId":"158","severity":1,"message":"159","line":14,"column":5,"nodeType":"160","messageId":"161","endLine":31,"endColumn":6},{"ruleId":"172","severity":1,"message":"189","line":34,"column":6,"nodeType":"174","endLine":34,"endColumn":55,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":38,"column":35,"nodeType":"193","messageId":"194","endLine":38,"endColumn":37},{"ruleId":"176","severity":1,"message":"195","line":55,"column":9,"nodeType":"178","messageId":"179","endLine":55,"endColumn":20},{"ruleId":"176","severity":1,"message":"196","line":11,"column":11,"nodeType":"178","messageId":"179","endLine":11,"endColumn":20},{"ruleId":"176","severity":1,"message":"197","line":11,"column":22,"nodeType":"178","messageId":"179","endLine":11,"endColumn":30},{"ruleId":"158","severity":1,"message":"159","line":21,"column":5,"nodeType":"160","messageId":"161","endLine":38,"endColumn":6},{"ruleId":"172","severity":1,"message":"198","line":39,"column":6,"nodeType":"174","endLine":39,"endColumn":8,"suggestions":"199"},{"ruleId":"172","severity":1,"message":"200","line":91,"column":6,"nodeType":"174","endLine":91,"endColumn":41,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":10,"column":28,"nodeType":"204","messageId":"205","endLine":10,"endColumn":30},{"ruleId":"172","severity":1,"message":"206","line":13,"column":6,"nodeType":"174","endLine":13,"endColumn":8,"suggestions":"207"},{"ruleId":"172","severity":1,"message":"208","line":39,"column":6,"nodeType":"174","endLine":39,"endColumn":8,"suggestions":"209"},{"ruleId":"172","severity":1,"message":"210","line":50,"column":6,"nodeType":"174","endLine":50,"endColumn":15,"suggestions":"211"},{"ruleId":"191","severity":1,"message":"192","line":57,"column":35,"nodeType":"193","messageId":"194","endLine":57,"endColumn":37},{"ruleId":"212","severity":1,"message":"213","line":91,"column":29,"nodeType":"214","messageId":"215","endLine":91,"endColumn":45},{"ruleId":"212","severity":1,"message":"216","line":98,"column":29,"nodeType":"214","messageId":"215","endLine":98,"endColumn":45},{"ruleId":"162","replacedBy":"217"},{"ruleId":"164","replacedBy":"218"},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-native-reassign",["219"],"no-negated-in-lhs",["220"],["219"],["220"],["219"],["220"],["219"],["220"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currency'. Either include it or remove the dependency array.","ArrayExpression",["221"],"no-unused-vars","'setDuration' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'duration', 'marketCharts.current_price', and 'triggerAlert'. Either include them or remove the dependency array. If 'triggerAlert' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["222"],["219"],["220"],"'Fragment' is defined but never used.",["219"],["220"],"React Hook useEffect has missing dependencies: 'data.state.currency' and 'data.state.date_of_purchase'. Either include them or remove the dependency array.",["223"],"React Hook useEffect has a missing dependency: 'getTotalPurchase'. Either include it or remove the dependency array.",["224"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setCurrency' is assigned a value but never used.","'firstname' is assigned a value but never used.","'lastname' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fiat' and 'origin'. Either include them or remove the dependency array. If 'setLabelStr' needs the current value of 'fiat', you can also switch to useReducer instead of useState and read 'fiat' in the reducer.",["225"],"React Hook useEffect has a missing dependency: 'positions'. Either include it or remove the dependency array.",["226"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'data.current_price'. Either include it or remove the dependency array.",["227"],"React Hook useEffect has a missing dependency: 'loadUserObj'. Either include it or remove the dependency array.",["228"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["229"],"no-self-assign","'sort[element][1]' is assigned to itself.","MemberExpression","selfAssignment","'sort[element][2]' is assigned to itself.",["219"],["220"],"no-global-assign","no-unsafe-negation",{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},"Update the dependencies array to be: [user, cryptoCurrencies, logedin, currency]",{"range":"248","text":"249"},"Update the dependencies array to be: [user, cryptoCurrencies, logedin, marketCharts.current_price, duration, triggerAlert]",{"range":"250","text":"251"},"Update the dependencies array to be: [data.state.currency, data.state.date_of_purchase]",{"range":"252","text":"253"},"Update the dependencies array to be: [user, cryptoCurrencies, logedin, renderOverview, getTotalPurchase]",{"range":"254","text":"255"},"Update the dependencies array to be: [fiat, origin]",{"range":"256","text":"257"},"Update the dependencies array to be: [nameArray, marketCharts, duration, positions]",{"range":"258","text":"259"},"Update the dependencies array to be: [data.current_price]",{"range":"260","text":"261"},"Update the dependencies array to be: [loadUserObj]",{"range":"262","text":"263"},"Update the dependencies array to be: [logedin, user]",{"range":"264","text":"265"},[1543,1576],"[user, cryptoCurrencies, logedin, currency]",[1544,1577],"[user, cryptoCurrencies, logedin, marketCharts.current_price, duration, triggerAlert]",[590,592],"[data.state.currency, data.state.date_of_purchase]",[1021,1070],"[user, cryptoCurrencies, logedin, renderOverview, getTotalPurchase]",[1019,1021],"[fiat, origin]",[2697,2732],"[nameArray, marketCharts, duration, positions]",[411,413],"[data.current_price]",[1283,1285],"[loadUserObj]",[1562,1571],"[logedin, user]"]